version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '${PORT}:${PORT}'
        environment:
            - DATABASE_URL=${DATABASE_URL}
            - MONGO_URL=${MONGO_URL}
            - REDIS_URL=${REDIS_URL}
            - ELASTIC_URL=${ELASTIC_URL}
            - JWT_SECRET_KEY=${JWT_SECRET_KEY}
            - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
        depends_on:
            - postgres
            - mongo
            - redis
            - elasticsearch
            - logstash
            - kibana

    postgres:
        image: postgres:14
        environment:
            POSTGRES_USER: ${POSTGRE_DB_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRE_DB_PASSWORD}
            POSTGRES_DB: ${POSTGRE_DB_DATABASE}
        ports:
            - '${POSTGRE_DB_PORT}:${POSTGRE_DB_PORT}'
        volumes:
            - postgres-data:/var/lib/postgresql/data

    mongo:
        image: mongo:5.0
        ports:
            - '${MONGO_DB_PORT}:${MONGO_DB_PORT}'
        volumes:
            - mongo-data:/data/db

    redis:
        image: redis:6-alpine
        ports:
            - '6379:6379'

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
        environment:
            - discovery.type=single-node
        ports:
            - '9200:9200'
        volumes:
            - es-data:/usr/share/elasticsearch/data

    logstash:
        image: docker.elastic.co/logstash/logstash:7.17.4
        ports:
            - '5044:5044'
        volumes:
            - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        depends_on:
            - elasticsearch

    kibana:
        image: docker.elastic.co/kibana/kibana:7.17.4
        ports:
            - '5601:5601'
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch

volumes:
    postgres-data:
    mongo-data:
    es-data:
